1、启动gdb: 输入命令"gcc -g -Wall XXX.c -o XXX",并输入"gdb XXX"。
2、显示c语言源代码: 输入"l"。
3、显示汇编的所有源代码: 输入"layout asm"。
4、显示某个函数的汇编代码: 输入"disas 函数名"。
5、显示当前栈的信息: 输入"bt"
6、打印当前栈中顶部桢的信息: 输入"info f"
7、打印当前函数中的所有局部变量: 输入"info locals"
8、打印当前函数的参数名及其值: 输入"info args"
9、打印当前函数中的异常处理信息: 输入"info catch"
10、打印当前栈中第n层桢的信息: 输入"frame n"
11、用gdb如何查看指定地址的内存内容: 格式: x /nfu <addr>
    说明:
	x 是 examine 的缩写

	n表示要显示的内存单元的个数

	f表示显示方式, 可取如下值
	x 按十六进制格式显示变量。
	d 按十进制格式显示变量。
	u 按十进制格式显示无符号整型。
	o 按八进制格式显示变量。
	t 按二进制格式显示变量。
	a 按十六进制格式显示变量。
	i 指令地址格式
	c 按字符格式显示变量。
	f 按浮点数格式显示变量。

	u表示一个地址单元的长度
	b表示单字节，
	h表示双字节，
	w表示四字节，
	g表示八字节
12、a)  `layout src' 仅显示源代码窗口。
    b)  `layout asm' 仅显示汇编代码窗口。
    c)  `layout split' 显示源代码和汇编代码窗口。
    d)  `layout regs' 显示寄存器和源代码窗口，或者寄存器和汇编代码窗口。
    e)  `layout next` 和 `layout prev' 切换窗口。
    f)  ctrl + L 刷新屏幕。
    g)  `C-x 1' 单窗口模式。
    h)  `C-x 2' 双窗口模式。
    i)  `C-x a' 回到传统模式。
13、makefile中加入调试信息:
    main : $(objects)
        cc -g -Wall $(objects) -o main
    main.o : practice.h
        cc -c -g -Wall source/main.c -o main.o
    practice.o :
        cc -c -g -Wall source/practice.c -o practice.o
