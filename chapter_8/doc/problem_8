问题：下面的声明取自某个源文件：
int a[10];
int *b = a;
但在另一个不同的源文件中，却发现了这样的代码：
extern int *a;
extern int b[];
int x,y;
...
x = a[3];
y = b[3];

说明：
    在第一个赋值中，编译器认为a是一个指针变量，因此a[3]被解释为取指针变量a中的值，
加上12，再执行间接访问操作；但实际上a是数组名，表示指向a[0]的指针，因此实际上执行
的是取值a[0]，加12，再执行间接访问操作，即*(a[0] + 12)。
    再第二个赋值中，编译器认为b是一个数组名，因此b[3]被解释为取数组b的首地址（存储地址），加上
12，再执行间接访问操作；但实际上b是一个指针变量，因此实际上执行的是取指针b的存储地址，
加上12，再执行间接访问操作，即*(&b + 12)，为堆栈中其他某个变量的值。
